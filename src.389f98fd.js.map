{"version":3,"sources":["scripts/utils/constants.js","scripts/utils/Api.js","index.js"],"names":["navigation","document","querySelector","exports","toggleButton","getElementById","sliderLine","slideWidth","offsetWidth","nextButton","prevButton","pagesElement","showPopupButton","popup","closePopupButton","modalForm","forms","textInput","emailInput","Api","url","headers","_classCallCheck","_url","_headers","_createClass","key","value","res","ok","json","Promise","reject","concat","status","statusText","userEmail","message","fetch","method","body","JSON","stringify","then","_checkStatus","api","_default","default","_constants","require","_Api","_interopRequireDefault","obj","__esModule","offset","currentPage","updatePageIndicator","textContent","closePopup","classList","remove","handleEscClose","event","addEventListener","target","add","removeEventListener","e","preventDefault","sendMessage","catch","err","console","log","style","left","toggle"],"mappings":"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","file":"src.389f98fd.js","sourceRoot":"..\\src","sourcesContent":["const navigation = document.querySelector('.navigation');\r\nconst toggleButton = document.getElementById('header__toggle');\r\nconst sliderLine = document.querySelector('.services__slider-line');\r\nconst slideWidth = document.querySelector('.slide').offsetWidth;\r\nconst nextButton = document.querySelector('.services__button_next')\r\nconst prevButton = document.querySelector('.services__button_prev');\r\nconst pagesElement = document.querySelector('.services__pages');\r\nconst showPopupButton = document.getElementById('show-popup');\r\nconst popup = document.getElementById('popup');\r\nconst closePopupButton = document.getElementById('close-popup');\r\nconst modalForm = document.forms['modal-form'];\r\nconst textInput = document.getElementById('message');\r\nconst emailInput = document.getElementById('email');\r\n\r\nexport {\r\n  navigation,\r\n  toggleButton,\r\n  sliderLine,\r\n  slideWidth,\r\n  nextButton,\r\n  prevButton,\r\n  pagesElement,\r\n  showPopupButton,\r\n  popup,\r\n  closePopupButton,\r\n  modalForm,\r\n  textInput,\r\n  emailInput\r\n};","class Api {\r\n  constructor(url, headers) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  // проверить статус запроса\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`${res.status} ${res.statusText}`);\r\n    };\r\n  };\r\n\r\n  // пример написания запроса к серверу\r\n  sendMessage(userEmail, message) {\r\n    return fetch(this._url + '/messages', {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        userEmail: userEmail,\r\n        message: message\r\n      })\r\n    }).then(this._checkStatus);\r\n  };\r\n};\r\n\r\n// здесь мы создаем api с адресом сервера\r\nconst api = new Api('https://your-backend.ru');\r\n\r\nexport default api;","import {\r\n  navigation,\r\n  toggleButton,\r\n  sliderLine,\r\n  slideWidth,\r\n  nextButton,\r\n  prevButton,\r\n  pagesElement,\r\n  showPopupButton,\r\n  popup,\r\n  closePopupButton,\r\n  modalForm,\r\n  textInput,\r\n  emailInput\r\n} from './scripts/utils/constants';\r\n\r\nimport api from './scripts/utils/Api';\r\n\r\nlet offset = 0;\r\nlet currentPage = 1;\r\n\r\nfunction updatePageIndicator() {\r\n  pagesElement.textContent = currentPage;\r\n}\r\n\r\n// закрытие попапа\r\nfunction closePopup () {\r\n  popup.classList.remove('popup_active');\r\n}\r\n\r\n// закрытие попапа по кнопке esc\r\nfunction handleEscClose(event) {\r\n  if (event.key === 'Escape') {\r\n    closePopup();\r\n  };\r\n};\r\n\r\n// закрытие попапа по клику вне формы\r\npopup.addEventListener('mousedown', (event) => {\r\n  if (event.target === popup) {\r\n    closePopup();\r\n  };\r\n});\r\n\r\n// добавляем слушатель к кнопке открытия модальной формы\r\nshowPopupButton.addEventListener('click', () => {\r\n  // очищаем поле с сообщением перед открытием\r\n  document.addEventListener('keydown', handleEscClose);\r\n  textInput.value = '';\r\n  popup.classList.add('popup_active');\r\n});\r\n\r\n// следим за закрытием попапа\r\nclosePopupButton.addEventListener('click', () => {\r\n  document.removeEventListener('keydown', handleEscClose);\r\n  closePopup();\r\n});\r\n\r\n// здесь можно описать запрос к api с отправкой сообщения\r\nmodalForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const userEmail = emailInput.value;\r\n    const message = textInput.value;\r\n    // делаем запрос к серверу\r\n    api.sendMessage(userEmail, message)\r\n    .then(() => {\r\n      // в случае успеха закрываем попап\r\n      popup.classList.remove('popup_active');\r\n    })\r\n    .catch((err) => {\r\n      // отлавливаем ошибку\r\n      console.log(err);\r\n    });\r\n});\r\n\r\n// переключаем слайд\r\nnextButton.addEventListener('click', () => {\r\n  offset = offset + slideWidth;\r\n  if (offset > slideWidth * 3) {\r\n    offset = 0;\r\n    currentPage = 1;\r\n  } else {\r\n    currentPage++;\r\n  }\r\n  sliderLine.style.left = -offset + 'px';\r\n  updatePageIndicator();\r\n});\r\n\r\nprevButton.addEventListener('click', () => {\r\n  offset = offset - slideWidth;\r\n  if (offset < 0) {\r\n    offset = slideWidth * 3;\r\n    currentPage = 4;\r\n  } else {\r\n    currentPage--;\r\n  }\r\n  sliderLine.style.left = -offset + 'px';\r\n  updatePageIndicator();\r\n});\r\n\r\ntoggleButton.addEventListener('click', () => {\r\n  navigation.classList.toggle('navigation_visible');\r\n});\r\n\r\nupdatePageIndicator();"]}