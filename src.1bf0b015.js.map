{"version":3,"sources":["scripts/utils/constants.js","index.js"],"names":["navigation","document","querySelector","exports","toggleButton","getElementById","sliderLine","slideWidth","offsetWidth","nextButton","prevButton","pagesElement","showPopupButton","popup","closePopupButton","modalForm","forms","textInput","_constants","require","offset","currentPage","updatePageIndicator","textContent","addEventListener","value","classList","add","remove","e","preventDefault","alert","concat","style","left","toggle"],"mappings":";AAWqD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,QAAA,UAAA,QAAA,WAAA,QAAA,WAAA,QAAA,gBAAA,QAAA,WAAA,QAAA,MAAA,QAAA,aAAA,QAAA,WAAA,QAAA,WAAA,QAAA,UAAA,QAAA,sBAAA,EAXrD,IAAMA,EAAaC,SAASC,cAAc,eAAeC,QAAAH,WAAAA,EACzD,IAAMI,EAAeH,SAASI,eAAe,kBAAkBF,QAAAC,aAAAA,EAC/D,IAAME,EAAaL,SAASC,cAAc,0BAA0BC,QAAAG,WAAAA,EACpE,IAAMC,EAAaN,SAASC,cAAc,UAAUM,YAAYL,QAAAI,WAAAA,EAChE,IAAME,EAAaR,SAASC,cAAc,0BAAyBC,QAAAM,WAAAA,EACnE,IAAMC,EAAaT,SAASC,cAAc,0BAA0BC,QAAAO,WAAAA,EACpE,IAAMC,EAAeV,SAASC,cAAc,oBAAoBC,QAAAQ,aAAAA,EAChE,IAAMC,EAAkBX,SAASI,eAAe,cAAcF,QAAAS,gBAAAA,EAC9D,IAAMC,EAAQZ,SAASI,eAAe,SAASF,QAAAU,MAAAA,EAC/C,IAAMC,EAAmBb,SAASI,eAAe,eAAeF,QAAAW,iBAAAA,EAChE,IAAMC,EAAYd,SAASe,MAAM,cAAcb,QAAAY,UAAAA,EAC/C,IAAME,EAAYhB,SAASI,eAAe,WAAWF,QAAAc,UAAAA;;ACwDhC,aAnErB,IAAAC,EAAAC,QAAA,6BAeIC,EAAS,EACTC,EAAc,EAElB,SAASC,IACPX,EAAY,aAACY,YAAcF,EAG7BT,EAAe,gBAACY,iBAAiB,QAAS,WAExCP,EAAS,UAACQ,MAAQ,GAClBZ,EAAK,MAACa,UAAUC,IAAI,kBAGtBb,EAAgB,iBAACU,iBAAiB,QAAS,WACzCX,EAAK,MAACa,UAAUE,OAAO,kBAIzBb,EAAS,UAACS,iBAAiB,SAAU,SAACK,GAClCA,EAAEC,iBACFC,MAAKC,cAAAA,OAAef,EAAS,UAACQ,MAAoD,kDAClFZ,EAAK,MAACa,UAAUE,OAAO,kBAG3BnB,EAAU,WAACe,iBAAiB,QAAS,YACnCJ,GAAkBb,EAAU,YACF,EAAbA,EAAU,YACrBa,EAAS,EACTC,EAAc,GAEdA,IAEFf,EAAU,WAAC2B,MAAMC,MAAQd,EAAS,KAClCE,MAGFZ,EAAU,WAACc,iBAAiB,QAAS,YACnCJ,GAAkBb,EAAU,YACf,GACXa,EAAsB,EAAbb,EAAU,WACnBc,EAAc,GAEdA,IAEFf,EAAU,WAAC2B,MAAMC,MAAQd,EAAS,KAClCE,MAGFlB,EAAY,aAACoB,iBAAiB,QAAS,WACrCxB,EAAU,WAAC0B,UAAUS,OAAO,wBAG9Bb","file":"src.1bf0b015.js","sourceRoot":"..\\src","sourcesContent":["const navigation = document.querySelector('.navigation');\r\nconst toggleButton = document.getElementById('header__toggle');\r\nconst sliderLine = document.querySelector('.services__slider-line');\r\nconst slideWidth = document.querySelector('.slide').offsetWidth;\r\nconst nextButton = document.querySelector('.services__button_next')\r\nconst prevButton = document.querySelector('.services__button_prev');\r\nconst pagesElement = document.querySelector('.services__pages');\r\nconst showPopupButton = document.getElementById('show-popup');\r\nconst popup = document.getElementById('popup');\r\nconst closePopupButton = document.getElementById('close-popup');\r\nconst modalForm = document.forms['modal-form'];\r\nconst textInput = document.getElementById('message');\r\n\r\nexport {\r\n  navigation,\r\n  toggleButton,\r\n  sliderLine,\r\n  slideWidth,\r\n  nextButton,\r\n  prevButton,\r\n  pagesElement,\r\n  showPopupButton,\r\n  popup,\r\n  closePopupButton,\r\n  modalForm,\r\n  textInput\r\n};","import {\r\n  navigation,\r\n  toggleButton,\r\n  sliderLine,\r\n  slideWidth,\r\n  nextButton,\r\n  prevButton,\r\n  pagesElement,\r\n  showPopupButton,\r\n  popup,\r\n  closePopupButton,\r\n  modalForm,\r\n  textInput\r\n} from './scripts/utils/constants';\r\n\r\nlet offset = 0;\r\nlet currentPage = 1;\r\n\r\nfunction updatePageIndicator() {\r\n  pagesElement.textContent = currentPage;\r\n}\r\n\r\nshowPopupButton.addEventListener('click', () => {\r\n  // очищаем поле с сообщением перед открытием\r\n  textInput.value = '';\r\n  popup.classList.add('popup_active');\r\n});\r\n\r\nclosePopupButton.addEventListener('click', () => {\r\n  popup.classList.remove('popup_active');\r\n});\r\n\r\n// здесь можно описать запрос к api с отправкой сообщения\r\nmodalForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    alert(`Сообщение: ${textInput.value}\\nПисьмо отправлено на rbru-metrika@yandex.ru`);\r\n    popup.classList.remove('popup_active');\r\n});\r\n\r\nnextButton.addEventListener('click', () => {\r\n  offset = offset + slideWidth;\r\n  if (offset > slideWidth * 3) {\r\n    offset = 0;\r\n    currentPage = 1;\r\n  } else {\r\n    currentPage++;\r\n  }\r\n  sliderLine.style.left = -offset + 'px';\r\n  updatePageIndicator();\r\n});\r\n\r\nprevButton.addEventListener('click', () => {\r\n  offset = offset - slideWidth;\r\n  if (offset < 0) {\r\n    offset = slideWidth * 3;\r\n    currentPage = 4;\r\n  } else {\r\n    currentPage--;\r\n  }\r\n  sliderLine.style.left = -offset + 'px';\r\n  updatePageIndicator();\r\n});\r\n\r\ntoggleButton.addEventListener('click', () => {\r\n  navigation.classList.toggle('navigation_visible');\r\n});\r\n\r\nupdatePageIndicator();"]}